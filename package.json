{
	"name": "gm-parser",
	"description": "A language server example",
	"author": "Microsoft Corporation",
	"license": "MIT",
	"version": "1.0.0",
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/vscode-extension-samples"
	},
	"publisher": "vscode-samples",
	"categories": [],
	"keywords": [
		"multi-root ready"
	],
	"engines": {
		"vscode": "^1.96.4"
	},
	"activationEvents": [
		"onLanguage:plaintext"
	],
	"main": "./out/extension",
	"contributes": {
		"customEditors": [
			{
				"viewType": "mutrose.pistar",
				"displayName": "PiStar Editor",
				"selector": [
					{
						"filenamePattern": "*.gm"
					}
				],
				"priority": "default"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "goal-model",
					"title": "MutRoSe",
					"icon": "media/icon.svg"
				},
				{
					"id": "vueapp-teste",
					"title": "vue app",
					"icon": "$(remote-explorer)"
				}
			]
		},
		"views": {
			"goal-model": [
				{
					"id": "goalModel",
					"name": "Goal Models",
					"icon": "media/icon.svg",
					"contextualTitle": "Goal Model"
				}
			],
			"vueapp-teste": [
				{
					"type": "webview",
					"id": "vueapp-teste:sidebar",
					"name": "vue app",
					"icon": "$(remote-explorer)",
					"contextualTitle": "vue app 2"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "goalModel.refreshModels",
					"when": "view == goalModel",
					"group": "navigation"
				},
				{
					"command": "goalModel.createNewMission",
					"when": "view == goalModel"
				}
			],
			"view/item/context": [
				{
					"command": "gm-parser.execMutRose",
					"when": "viewItem == goalModel",
					"group": "navigation"
				},
				{
					"command": "goalModel.deleteRefinement",
					"when": "viewItem == refinement",
					"group": "navigation"
				},
				{
					"command": "goalModel.addRefinement",
					"when": "viewItem == refinements",
					"group": "navigation"
				},
				{
					"command": "goalModel.addNode",
					"when": "viewItem == mission",
					"group": "navigation"
				},
				{
					"command": "goalModel.rename",
					"when": "viewItem == mission",
					"group": "navigation"
				},
				{
					"command": "goalModel.deleteNode",
					"when": "viewItem == node",
					"group": "navigation"
				},
				{
					"command": "goalModel.setRuntimeAnnotation",
					"when": "viewItem == node",
					"group": "navigation"
				},
				{
					"command": "goalModel.addRefinementToNode",
					"when": "viewItem == node",
					"group": "navigation"
				},
				{
					"command": "goalModel.changeRefinementType",
					"when": "viewItem == refinements",
					"group": "navigation"
				},
				{
					"command": "goalModel.editNode",
					"when": "viewItem == node",
					"group": "navigation"
				},
				{
					"command": "goalModel.deleteProperty",
					"when": "viewItem == attribute",
					"group": "navigation"
				}
			]
		},
		"commands": [
			{
				"command": "goalModel.openVue",
				"title": "Open Vue"
			},
			{
				"command": "goalModel.setRuntimeAnnotation",
				"title": "Set Runtime Annotation"
			},
			{
				"command": "goalModel.addRefinementToNode",
				"title": "Add refinements to the node"
			},
			{
				"command": "goalModel.addRefinement",
				"title": "Add refinements to the refinementList"
			},
			{
				"command": "goalModel.addNode",
				"title": "Create New Node"
			},
			{
				"command": "goalModel.deleteNode",
				"title": "Remove Node"
			},
			{
				"command": "goalModel.editNode",
				"title": "Edit Node"
			},
			{
				"command": "goalModel.rename",
				"title": "Rename"
			},
			{
				"command": "goalModel.editProperty",
				"title": "Edit Property"
			},
			{
				"command": "goalModel.focusElement",
				"title": "Focus Element"
			},
			{
				"command": "gm-parser.execMutRose",
				"title": "Decompose with MutRoSe"
			},
			{
				"command": "goalModel.createNewMission",
				"title": "Create Mission"
			},
			{
				"command": "goalModel.addProperty",
				"title": "Add new property"
			},
			{
				"command": "goalModel.refreshModels",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "goalModel.deleteRefinement",
				"title": "Remove refinement"
			},
			{
				"command": "goalModel.changeRefinementType",
				"title": "Change refinements' type"
			},
			{
				"command": "goalModel.deleteProperty",
				"title": "Remove Property"
			},
			{
				"command": "gm-parser.gm2DIO",
				"title": "Parse Goal Model to Draw.io XML"
			},
			{
				"command": "gm-parser.DIO2gm",
				"title": "Parse Draw.io XML to Goal Model"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Example configuration",
			"properties": {
				"languageServerExample.maxNumberOfProblems": {
					"scope": "resource",
					"type": "number",
					"default": 100,
					"description": "Controls the maximum number of problems produced by the server."
				},
				"gmParser.hddlPath": {
					"scope": "window",
					"type": "string",
					"default": "./hddl/hddl.txt",
					"description": "Controls the maximum number of problems produced by the server."
				},
				"languageServerExample.trace.server": {
					"scope": "window",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off",
					"description": "Traces the communication between VS Code and the language server."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"start:webview": "cd webview-ui && npm run dev",
		"build:webview": "cd webview-ui && npm run build && cd ..",
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"lint": "eslint ./client/src ./server/src --ext .ts,.tsx",
		"test": "sh ./scripts/e2e.sh"
	},
	"devDependencies": {
		"@types/mocha": "^9.1.0",
		"@types/node": "^16.11.7",
		"@types/vscode": "^1.96.0",
		"@typescript-eslint/eslint-plugin": "^5.54.0",
		"@typescript-eslint/parser": "^5.54.0",
		"@vscode/test-electron": "2.4.1",
		"eslint": "^8.35.0",
		"mocha": "^9.2.1",
		"typescript": "^5.0.2"
	},
	"dependencies": {
		"gm-parser": "file:"
	}
}